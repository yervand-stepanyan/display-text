{"version":3,"sources":["fetchAPI/fetchAPI.js","globals/constants.js","components/Loader/Loader.style.js","components/Loader/Loader.js","components/ButtonGroup/ButtonGroup.style.js","components/ButtonGroup/ButtonGroup.js","routes/routes.js","components/Text/Text.style.js","components/Text/Text.js","components/Title/Title.style.js","components/Title/Title.js","pages/Main/Main.style.js","pages/Main/Main.js","theme/theme.js","reportWebVitals.js","index.js"],"names":["a","url","method","URL","process","options","fetch","response","json","API","getMessage","request","BUTTON_LABEL","LOADER","size","thickness","TITLE","useStyles","makeStyles","buttonProgress","left","marginLeft","marginTop","position","top","Loader","classes","CircularProgress","className","theme","buttonGroupContainer","display","marginBottom","customSpacing","large","showButtonWrapper","marginRight","ButtonGroup","handleReset","handleShow","isDisabled","loading","Button","color","disabled","onClick","variant","ROUTES","hello","textContainer","border","primaryColor","borderRadius","boxSizing","minHeight","textFieldHeight","minWidth","textFieldWidth","padding","small","base","textAlign","Text","text","Typography","titleContainer","Title","title","mainContainer","alignItems","flexDirection","justifyContent","Main","useState","data","setData","setLoading","messageToShow","setMessageToShow","useEffect","message","getData","createMuiTheme","MAIN_SPACING_VALUE","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.06c74c71.chunk.js","sourcesContent":["async function request({ url, method }) {\n  const URL = `${process.env.REACT_APP_ROOT_API}/${url}`;\n  const options = {\n    method,\n  };\n\n  const response = await fetch(URL, options);\n\n  return response.json();\n}\n\nconst API = {\n  getMessage: url => request({ url, method: 'GET' }),\n};\n\nexport default API;\n","export const BUTTON_LABEL = {\n  reset: 'Reset',\n  show: 'Show',\n};\nexport const LOADER = {\n  button: {\n    size: 24,\n    thickness: 8,\n  },\n};\nexport const TITLE = `Click the \"${BUTTON_LABEL.show}\" button to get a Message`;\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles({\n  buttonProgress: {\n    left: '50%',\n    marginLeft: -12,\n    marginTop: -12,\n    position: 'absolute',\n    top: '50%',\n  },\n});\n","import CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { LOADER } from '../../globals/constants';\nimport { useStyles } from './Loader.style';\n\nfunction Loader() {\n  const classes = useStyles();\n\n  return (\n    <CircularProgress\n      className={classes.buttonProgress}\n      size={LOADER.button.size}\n      thickness={LOADER.button.thickness}\n    />\n  );\n}\n\nexport default Loader;\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(theme => ({\n  buttonGroupContainer: {\n    display: 'flex',\n    marginBottom: theme.customSpacing.large,\n  },\n  showButtonWrapper: {\n    marginRight: theme.customSpacing.large,\n    position: 'relative',\n  },\n}));\n","import PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\n\nimport { BUTTON_LABEL } from '../../globals/constants';\nimport Loader from '../Loader';\nimport { useStyles } from './ButtonGroup.style';\n\nfunction ButtonGroup({ handleReset, handleShow, isDisabled, loading }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.buttonGroupContainer}>\n      <div className={classes.showButtonWrapper}>\n        <Button\n          color=\"primary\"\n          disabled={loading || isDisabled}\n          onClick={handleShow}\n          variant=\"contained\"\n        >\n          {BUTTON_LABEL.show}\n        </Button>\n        {loading && <Loader />}\n      </div>\n      <div>\n        <Button\n          color=\"secondary\"\n          disabled={!isDisabled}\n          onClick={handleReset}\n          variant=\"outlined\"\n        >\n          {BUTTON_LABEL.reset}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nButtonGroup.propTypes = {\n  handleReset: PropTypes.func.isRequired,\n  handleShow: PropTypes.func.isRequired,\n  isDisabled: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default ButtonGroup;\n","const ROUTES = {\n  hello: 'hello',\n};\n\nexport default ROUTES;\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(theme => ({\n  textContainer: {\n    border: `1px solid ${theme.color.primaryColor}`,\n    borderRadius: theme.border.borderRadius,\n    boxSizing: 'border-box',\n    minHeight: theme.size.textFieldHeight,\n    minWidth: theme.size.textFieldWidth,\n    padding: `${theme.customSpacing.small} ${theme.customSpacing.base}`,\n    textAlign: 'center',\n  },\n}));\n","import PropTypes from 'prop-types';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport { useStyles } from './Text.style';\n\nfunction Text({ text }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.textContainer}>\n      <Typography variant=\"h5\">{text}</Typography>\n    </div>\n  );\n}\n\nText.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Text;\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(theme => ({\n  titleContainer: {\n    marginBottom: theme.customSpacing.large,\n    textAlign: 'center',\n  },\n}));\n","import PropTypes from 'prop-types';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport { useStyles } from './Title.style';\n\nfunction Title({ title }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.titleContainer}>\n      <Typography variant=\"h4\">{title}</Typography>\n    </div>\n  );\n}\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(theme => ({\n  mainContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    boxSizing: 'border-box',\n    minHeight: '100vh',\n    padding: theme.customSpacing.base,\n  },\n}));\n","import { useEffect, useState } from 'react';\n\nimport API from '../../fetchAPI';\nimport ButtonGroup from '../../components/ButtonGroup';\nimport ROUTES from '../../routes';\nimport Text from '../../components/Text';\nimport Title from '../../components/Title';\nimport { TITLE } from '../../globals/constants';\nimport { useStyles } from './Main.style';\n\nfunction Main() {\n  const classes = useStyles();\n  const [data, setData] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [messageToShow, setMessageToShow] = useState('');\n\n  useEffect(() => {\n    setMessageToShow(data.message || '');\n  }, [data]);\n\n  const getData = async () => {\n    try {\n      setLoading(true);\n\n      const response = await API.getMessage(ROUTES.hello);\n\n      setData(response);\n    } catch (e) {\n      setLoading(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleShow = async () => {\n    await getData();\n  };\n\n  const handleReset = () => {\n    setData('');\n  };\n\n  return (\n    <div className={classes.mainContainer}>\n      <Title title={TITLE} />\n      <ButtonGroup\n        handleReset={handleReset}\n        handleShow={handleShow}\n        isDisabled={!!data}\n        loading={loading}\n      />\n      <Text text={messageToShow} />\n    </div>\n  );\n}\n\nexport default Main;\n","import { createMuiTheme } from '@material-ui/core';\n\nconst MAIN_BORDER_RADIUS_VALUE = 4;\nconst MAIN_SPACING_VALUE = 8;\nconst TEXT_FIELD_WIDTH = 300;\nconst TEXT_FIELD_HEIGHT = 42;\n\nconst primaryColor = '#3F51B5';\n\nexport const theme = createMuiTheme({\n  border: {\n    borderRadius: `${MAIN_BORDER_RADIUS_VALUE}px`,\n  },\n  color: {\n    primaryColor,\n  },\n  customSpacing: {\n    small: `${MAIN_SPACING_VALUE / 2}px`,\n    base: `${MAIN_SPACING_VALUE}px`,\n    large: `${MAIN_SPACING_VALUE * 2}px`,\n  },\n  size: {\n    textFieldWidth: `${TEXT_FIELD_WIDTH}px`,\n    textFieldHeight: `${TEXT_FIELD_HEIGHT}px`,\n  },\n});\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Main from './pages/Main';\nimport { theme } from './theme/theme';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Main />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}